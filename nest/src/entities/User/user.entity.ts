import {
    Entity, // Помечает класс как сущность для хранения в базе данных
    PrimaryGeneratedColumn, // Генерирует уникальный идентификатор для каждой записи
    Column, // Описывает столбец в таблице
    CreateDateColumn, // Добавляет столбец с датой создания записи
    UpdateDateColumn, // Добавляет столбец с датой последнего обновления записи
} from "typeorm";

@Entity() // Объявляет, что класс является сущностью, то есть декоратор говорит TypeORM,
// что этот класс надо отобразить в таблицу бд и название таблицы будет равно имени класса, то есть user
export class User {
    @PrimaryGeneratedColumn("increment") // Генерирует уникальный идентификатор для каждой записи, то есть 1, 2, 3, 4 ..
    id: number; /// Первичный ключ в виде числа

    @Column({ unique: true }) // Уникальное значение поля, то есть нельзя создать два пользователя с одинаковым
    email: string; // email в виде строки должен быть

    @Column()
    password: string; // пароль в виде строки должен быть

    @Column()
    name: string;

    @CreateDateColumn()
    createdAt: Date; // Дата создания записи в виде даты

    @UpdateDateColumn()
    updatedAt: Date; // Дата последнего обновления записи в виде даты
}
