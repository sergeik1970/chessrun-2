import React, { useState, useCallback } from "react";
import PostsList from "./index";
import { Post } from "../../types/Post";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å Unsplash –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
const getImagesForPost = (id: number, index: number, categoryId: string) => {
    // –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const imageCollections = {
        competitions: [
            "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop&auto=format", // –±–µ–≥ –≤ –ª–µ—Å—É
            "https://images.unsplash.com/photo-1544717297-fa95b6ee9643?w=800&h=600&fit=crop&auto=format", // —Å–ø–æ—Ä—Ç—Å–º–µ–Ω—ã
            "https://images.unsplash.com/photo-1530549387789-4c1017266635?w=800&h=600&fit=crop&auto=format", // –º–∞—Ä–∞—Ñ–æ–Ω
            "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop&auto=format", // –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        ],
        travel: [
            "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=800&h=600&fit=crop&auto=format", // –≥–æ—Ä—ã
            "https://images.unsplash.com/photo-1441974231531-c6227db76b6e?w=800&h=600&fit=crop&auto=format", // –ª–µ—Å
            "https://images.unsplash.com/photo-1464822759844-d150baec3e5e?w=800&h=600&fit=crop&auto=format", // –≥–æ—Ä–Ω–∞—è —Ç—Ä–æ–ø–∞
            "https://images.unsplash.com/photo-1551632811-561732d1e306?w=800&h=600&fit=crop&auto=format", // –∑–∏–º–Ω–∏–π –ª–µ—Å
        ],
        training: [
            "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop&auto=format", // –±–µ–≥
            "https://images.unsplash.com/photo-1544717297-fa95b6ee9643?w=800&h=600&fit=crop&auto=format", // —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞
            "https://images.unsplash.com/photo-1517963879433-6ad2b056d712?w=800&h=600&fit=crop&auto=format", // –≥—Ä—É–ø–ø–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞
            "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop&auto=format", // —Å–ø–æ—Ä—Ç –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ
        ],
        news: [
            "https://images.unsplash.com/photo-1504711434969-e33886168f5c?w=800&h=600&fit=crop&auto=format", // –Ω–æ–≤–æ—Å—Ç–∏
            "https://images.unsplash.com/photo-1586339949916-3e9457bef6d3?w=800&h=600&fit=crop&auto=format", // —Å–æ–±—ã—Ç–∏—è
            "https://images.unsplash.com/photo-1495020689067-958852a7765e?w=800&h=600&fit=crop&auto=format", // –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            "https://images.unsplash.com/photo-1504711434969-e33886168f5c?w=800&h=600&fit=crop&auto=format", // –ø—Ä–µ—Å—Å–∞
        ],
    };

    // –ö–∞–∂–¥—ã–π —Ç—Ä–µ—Ç–∏–π –ø–æ—Å—Ç –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    if (index % 3 === 0) {
        return [];
    }

    const categoryImages =
        imageCollections[categoryId as keyof typeof imageCollections] || imageCollections.news;
    const mainImageIndex = (id - 1) % categoryImages.length;

    const images = [
        {
            id: `img-${id}-1`,
            url: categoryImages[mainImageIndex],
            alt: `–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–∞ ${id}`,
            isMain: true,
        },
    ];

    // –ö–∞–∂–¥—ã–π –≤—Ç–æ—Ä–æ–π –ø–æ—Å—Ç —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    if (index % 2 === 0) {
        const secondImageIndex = (mainImageIndex + 1) % categoryImages.length;
        // images.push({
        //     id: `img-${id}-2`,
        //     url: categoryImages[secondImageIndex],
        //     alt: `–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–∞ ${id}`,
        // });

        // –ö–∞–∂–¥—ã–π —á–µ—Ç–≤–µ—Ä—Ç—ã–π –ø–æ—Å—Ç —Å –µ—â–µ –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∫–∞—Ä—É—Å–µ–ª–∏)
        if (index % 4 === 0) {
            const thirdImageIndex = (mainImageIndex + 2) % categoryImages.length;
            const fourthImageIndex = (mainImageIndex + 3) % categoryImages.length;

            // images.push(
            //     {
            //         id: `img-${id}-3`,
            //         url: categoryImages[thirdImageIndex],
            //         alt: `–¢—Ä–µ—Ç—å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–∞ ${id}`,
            //     },
            //     {
            //         id: `img-${id}-4`,
            //         url: categoryImages[fourthImageIndex],
            //         alt: `–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–∞ ${id}`,
            //     },
            // );
        }
    }

    return images;
};

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤
const generateMockPosts = (startId: number, count: number): Post[] => {
    const categories = [
        { id: "competitions", name: "–°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è", icon: "üèÉ‚Äç‚ôÇÔ∏è", color: "#28a745" },
        { id: "travel", name: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", icon: "üéø", color: "#17a2b8" },
        { id: "training", name: "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", icon: "üí™", color: "#ffc107" },
        { id: "news", name: "–ù–æ–≤–æ—Å—Ç–∏", icon: "üì∞", color: "#6f42c1" },
    ];

    return Array.from({ length: count }, (_, index) => {
        const id = startId + index;
        const category = categories[index % categories.length];

        return {
            id: id.toString(),
            title: `–ü–æ—Å—Ç –Ω–æ–º–µ—Ä ${id}: ${category.name}`,
            text: `–≠—Ç–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å—Ç–∞ –Ω–æ–º–µ—Ä ${id}. –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–æ–±—ã—Ç–∏—è, —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è –∏–ª–∏ –Ω–æ–≤–æ—Å—Ç–∏.<br>
–í—Ç–æ—Ä–æ–π –∞–±–∑–∞—Ü —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π. –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: <a href="https://example.com">–ü–æ–¥—Ä–æ–±–Ω–µ–µ –∑–¥–µ—Å—å</a>.<br>
–¢—Ä–µ—Ç–∏–π –∞–±–∑–∞—Ü –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–µ–∑–∫–∏ —Ç–µ–∫—Å—Ç–∞. –≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª–∏–Ω–Ω—ã–º, —á—Ç–æ–±—ã —Å—Ä–∞–±–æ—Ç–∞–ª–∞ —Ñ—É–Ω–∫—Ü–∏—è "–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ".`,
            createdAt: new Date(2024, 0, id, 10, 0, 0).toISOString(), // —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –¥–ª—è SSR
            updatedAt: new Date(2024, 0, id, 10, 30, 0).toISOString(),
            author: "–ê–≤—Ç–æ—Ä –ø–æ—Å—Ç–∞",
            images: getImagesForPost(id, index, category.id),
            category,
        };
    });
};

const PostsListExample: React.FC = () => {
    const [posts, setPosts] = useState<Post[]>(() => generateMockPosts(1, 10));
    const [loading, setLoading] = useState(false);
    const [hasMore, setHasMore] = useState(true);

    const handleLoadMore = useCallback(() => {
        if (loading) return;

        setLoading(true);

        // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
        setTimeout(() => {
            const newPosts = generateMockPosts(posts.length + 1, 5);
            setPosts((prev) => [...prev, ...newPosts]);
            setLoading(false);

            // –°–∏–º—É–ª—è—Ü–∏—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤ –ø–æ—Å–ª–µ 50 —à—Ç—É–∫
            if (posts.length >= 45) {
                setHasMore(false);
            }
        }, 1000);
    }, [posts.length, loading]);

    const handleEdit = useCallback((postId: string) => {
        console.log("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç:", postId);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    }, []);

    const handleDelete = useCallback((postId: string) => {
        console.log("–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç:", postId);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        setPosts((prev) => prev.filter((post) => post.id !== postId));
    }, []);

    return (
        <div>
            <h1 style={{ textAlign: "center", margin: "20px 0" }}>–õ–µ–Ω—Ç–∞ –Ω–æ–≤–æ—Å—Ç–µ–π</h1>

            <PostsList
                posts={posts}
                isAdmin={true} // –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
                onEdit={handleEdit}
                onDelete={handleDelete}
                onLoadMore={handleLoadMore}
                hasMore={hasMore}
                loading={loading}
            />
        </div>
    );
};

export default PostsListExample;
