import React, { useState, useEffect, useCallback } from "react";
import PostCard from "../PostCard";
import { Post, PostsListProps } from "../../types";
import styles from "./index.module.scss";
import postsStyles from "../../styles/posts.module.scss";

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ø–æ—Å—Ç–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ—Å—Ç—ã –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–æ—á–µ–∫ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å/—Å–≤–µ—Ä–Ω—É—Ç—å —Ç–µ–∫—Å—Ç
 */

const PostsList: React.FC<PostsListProps> = ({
    posts,
    isAdmin = false,
    onEdit,
    onDelete,
    onLoadMore,
    hasMore = false,
    loading = false,
}) => {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã—Ö –ø–æ—Å—Ç–æ–≤
    const [expandedPosts, setExpandedPosts] = useState<Set<string>>(new Set());

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å—Ç–∞
     */
    const handleReadMore = useCallback((postId: string) => {
        setExpandedPosts((prev) => {
            const newSet = new Set(prev);
            if (newSet.has(postId)) {
                newSet.delete(postId);
            } else {
                newSet.add(postId);
            }
            return newSet;
        });
    }, []);

    /**
     * –õ–æ–≥–∏–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –ø—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –∫–æ–Ω—Ü—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    useEffect(() => {
        if (!hasMore || loading || !onLoadMore) return;

        const handleScroll = () => {
            const scrollTop = document.documentElement.scrollTop;
            const scrollHeight = document.documentElement.scrollHeight;
            const clientHeight = document.documentElement.clientHeight;

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –∑–∞ 1000px –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            if (scrollTop + clientHeight >= scrollHeight - 1000) {
                onLoadMore();
            }
        };

        window.addEventListener("scroll", handleScroll);
        return () => window.removeEventListener("scroll", handleScroll);
    }, [hasMore, loading, onLoadMore]);

    return (
        <div className={postsStyles.postsList}>
            {posts &&
                posts.map((post) => (
                    <div key={post.id} className={postsStyles.postItem}>
                        <PostCard
                            post={post}
                            isAdmin={isAdmin}
                            onEdit={onEdit}
                            onDelete={onDelete}
                            onReadMore={handleReadMore}
                            showFullText={expandedPosts.has(post.id)}
                        />
                    </div>
                ))}

            {loading && (
                <div className={postsStyles.loading}>
                    <div className={postsStyles.spinner}></div>
                    <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–æ–≤...</p>
                </div>
            )}

            {!hasMore && posts && posts.length > 0 && (
                <div className={styles.endMessage}>
                    <p>–í—Å–µ –ø–æ—Å—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã</p>
                </div>
            )}

            {posts.length === 0 && !loading && (
                <div className={postsStyles.emptyState}>
                    <div className={postsStyles.emptyIcon}>üìù</div>
                    <h3>–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤</h3>
                    <p>–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø–æ—Å—Ç—ã!</p>
                </div>
            )}
        </div>
    );
};

export default PostsList;
