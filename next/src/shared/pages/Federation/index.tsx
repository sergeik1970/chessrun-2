import React, { ReactElement, useState, useEffect } from "react";
import Image from "next/image";
import Footer from "../../components/Footer";
import styles from "./index.module.scss";

const FederationPage = (): ReactElement => {
    const [selectedDocument, setSelectedDocument] = useState<string | null>(null);

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏
    const federationInfo = {
        vk: "https://vk.com/chessrun",
        vkDisplay: "vk.com/chessrun",
        email: "nvizotova44@mail.ru",
    };

    // –î–æ–∫—É–º–µ–Ω—Ç—ã —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏
    const documents = [
        {
            id: "charter",
            title: "–£—Å—Ç–∞–≤ –§–°–û–ö–û",
            description: "–£—Å—Ç–∞–≤ –§–µ–¥–µ—Ä–∞—Ü–∏–∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ö–æ—Å—Ç—Ä–æ–º—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",
            type: "PDF",
            size: "1.2 –ú–ë",
            url: "/documents/federation/charter.pdf",
        },
        {
            id: "calendar",
            title: "–ï–¥–∏–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–π –ø–ª–∞–Ω 2025",
            description:
                "–ï–¥–∏–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–π –ø–ª–∞–Ω —Ñ–∏–∑–∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö –∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–∞ 2025 –≥–æ–¥",
            type: "PDF",
            size: "650 –ö–ë",
            url: "/documents/federation/Ediniy-kalendarniy-plan-2025.pdf",
        },
        {
            id: "statement",
            title: "–ó–∞—è–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–µ–º–µ",
            description: "–ó–∞—è–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–µ–º–µ –≤ —á–ª–µ–Ω—ã –§–µ–¥–µ—Ä–∞—Ü–∏–∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
            type: "PDF",
            size: "320 –ö–ë",
            url: "/documents/federation/statement.pdf",
        },
        {
            id: "accreditation",
            title: "–ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è",
            description: "–î–æ–∫—É–º–µ–Ω—Ç –æ–± –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏ –§–µ–¥–µ—Ä–∞—Ü–∏–∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
            type: "JPG",
            size: "480 –ö–ë",
            url: "/images/federation/accreditation.jpg",
            isImage: true,
        },
        {
            id: "svidetelstvo",
            title: "–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ",
            description: "–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏",
            type: "JPG",
            size: "520 –ö–ë",
            url: "/images/federation/svidetelstvo.jpg",
            isImage: true,
        },
    ];

    const handleDocumentClick = (documentId: string) => {
        setSelectedDocument(documentId);
        // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.body.style.overflow = "hidden";
    };

    const handleCloseModal = () => {
        setSelectedDocument(null);
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.body.style.overflow = "unset";
    };

    const handleDownloadDocument = (url: string, title: string, isImage?: boolean) => {
        if (isImage) {
            // –î–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
            window.open(url, "_blank");
        } else {
            // –î–ª—è PDF —Å–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            const link = document.createElement("a");
            link.href = url;
            link.download = title;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    };

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ Escape
    useEffect(() => {
        const handleEscapeKey = (event: KeyboardEvent) => {
            if (event.key === "Escape" && selectedDocument) {
                handleCloseModal();
            }
        };

        document.addEventListener("keydown", handleEscapeKey);
        return () => {
            document.removeEventListener("keydown", handleEscapeKey);
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
            document.body.style.overflow = "unset";
        };
    }, [selectedDocument]);

    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
    const selectedDoc = documents.find((doc) => doc.id === selectedDocument);

    return (
        <div className={styles.federationPage}>
            {/* Hero —Å–µ–∫—Ü–∏—è */}
            <section className={styles.hero}>
                <div className={styles.heroBackground}>
                    <Image
                        src="/images/federation/federation-hero.jpg"
                        alt="–§–µ–¥–µ—Ä–∞—Ü–∏—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
                        fill
                        style={{ objectFit: "cover" }}
                        priority
                    />
                </div>
                <div className={styles.heroOverlay}>
                    <div className={styles.heroContent}>
                        <h1 className={styles.heroTitle}>
                            <span className={styles.heroTitleLine}>
                                –§–µ–¥–µ—Ä–∞—Ü–∏—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                            </span>
                            <span className={styles.heroTitleLine}>–ö–æ—Å—Ç—Ä–æ–º—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏</span>
                        </h1>
                    </div>
                </div>
            </section>

            {/* –î–æ–∫—É–º–µ–Ω—Ç—ã */}
            <section className={styles.documentsSection}>
                <div className={styles.container}>
                    <h2 className={styles.sectionTitle}>–î–æ–∫—É–º–µ–Ω—Ç—ã —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏</h2>
                    <div className={styles.documentsGrid}>
                        {documents.map((doc) => (
                            <div
                                key={doc.id}
                                className={styles.documentCard}
                                onClick={() => handleDocumentClick(doc.id)}
                            >
                                <div className={styles.documentIcon}>
                                    {doc.isImage ? "üñºÔ∏è" : "üìÑ"}
                                </div>
                                <div className={styles.documentInfo}>
                                    <h4 className={styles.documentTitle}>{doc.title}</h4>
                                    <p className={styles.documentDescription}>{doc.description}</p>
                                    <div className={styles.documentMeta}>
                                        <span className={styles.documentType}>{doc.type}</span>
                                        <span className={styles.documentSize}>{doc.size}</span>
                                    </div>
                                </div>
                                <div className={styles.documentDownload}>
                                    {/* –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏-–∏–∫–æ–Ω–∫–∏ */}
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <section className={styles.contactSection}>
                <div className={styles.container}>
                    <h2 className={styles.sectionTitle}>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
                    <div className={styles.contactGrid}>
                        <div className={styles.contactCard}>
                            <div className={styles.contactIcon}>üì±</div>
                            <h4>–í–ö–æ–Ω—Ç–∞–∫—Ç–µ</h4>
                            <p>
                                <a
                                    href={federationInfo.vk}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    style={{ color: "#666", textDecoration: "none" }}
                                >
                                    {federationInfo.vkDisplay}
                                </a>
                            </p>
                        </div>

                        <div className={styles.contactCard}>
                            <div className={styles.contactIcon}>‚úâÔ∏è</div>
                            <h4>Email</h4>
                            <p>
                                <a
                                    href={`mailto:${federationInfo.email}`}
                                    style={{ color: "#666", textDecoration: "none" }}
                                >
                                    {federationInfo.email}
                                </a>
                            </p>
                        </div>
                    </div>
                </div>
            </section>

            {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ */}
            {selectedDocument && selectedDoc && (
                <div className={styles.modal} onClick={handleCloseModal}>
                    <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>
                        <div className={styles.modalHeader}>
                            <h3 className={styles.modalTitle}>{selectedDoc.title}</h3>
                            <div className={styles.modalActions}>
                                {selectedDoc.type === "PDF" && (
                                    <button
                                        onClick={() => window.open(selectedDoc.url, "_blank")}
                                        className={styles.openButton}
                                        title="–û—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ"
                                    >
                                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                                            <path
                                                d="M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6M15 3h6v6M10 14L21 3"
                                                stroke="currentColor"
                                                strokeWidth="3"
                                                strokeLinecap="round"
                                                strokeLinejoin="round"
                                            />
                                        </svg>
                                    </button>
                                )}
                                <button
                                    onClick={() =>
                                        handleDownloadDocument(
                                            selectedDoc.url,
                                            selectedDoc.title,
                                            selectedDoc.isImage,
                                        )
                                    }
                                    className={styles.downloadButton}
                                    title={
                                        selectedDoc.isImage
                                            ? "–û—Ç–∫—Ä—ã—Ç—å –≤ –ø–æ–ª–Ω–æ–º —Ä–∞–∑–º–µ—Ä–µ"
                                            : "–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª"
                                    }
                                >
                                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                                        <path
                                            d="M21 15V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V15"
                                            stroke="currentColor"
                                            strokeWidth="3"
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                        />
                                        <path
                                            d="M7 10L12 15L17 10"
                                            stroke="currentColor"
                                            strokeWidth="3"
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                        />
                                        <path
                                            d="M12 15V3"
                                            stroke="currentColor"
                                            strokeWidth="3"
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                        />
                                    </svg>
                                </button>
                                <button
                                    onClick={handleCloseModal}
                                    className={styles.closeButton}
                                    title="–ó–∞–∫—Ä—ã—Ç—å"
                                >
                                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                                        <path
                                            d="M18 6L6 18M6 6L18 18"
                                            stroke="currentColor"
                                            strokeWidth="3"
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                        />
                                    </svg>
                                </button>
                            </div>
                        </div>

                        <div className={styles.modalBody}>
                            {selectedDoc.isImage ? (
                                <div className={styles.imagePreview}>
                                    <Image
                                        src={selectedDoc.url}
                                        alt={selectedDoc.title}
                                        fill
                                        style={{
                                            objectFit: "contain",
                                        }}
                                    />
                                </div>
                            ) : selectedDoc.type === "PDF" ? (
                                <div className={styles.pdfContainer}>
                                    <iframe
                                        src={`${selectedDoc.url}#toolbar=0&navpanes=0&scrollbar=1&page=1&view=FitH&zoom=page-fit`}
                                        className={styles.pdfFrame}
                                        title="PDF Viewer"
                                    />
                                </div>
                            ) : (
                                <div className={styles.documentIcon}>üìÑ</div>
                            )}
                        </div>
                    </div>
                </div>
            )}

            <Footer />
        </div>
    );
};

export default FederationPage;
